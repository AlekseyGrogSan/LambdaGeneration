name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Бэкенд: ASP.NET API
  backend-ci:
    name: Build and Test .NET API
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.0'
        
    - name: Restore dependencies
      run: |
        cd backend
        dotnet restore
      
    - name: Build API
      run: |
        cd backend
        dotnet build --configuration Release --no-restore
      
    - name: Run tests
      run: |
        cd backend
        dotnet test --configuration Release --no-build --verbosity normal
        
    - name: Run EF Core migrations check
      run: |
        cd backend
        dotnet ef migrations script --idempotent --output /tmp/migrations.sql
        echo "✅ Migrations are valid"

  # Фронтенд: React + TypeScript
  frontend-ci:
    name: Build React App
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
      
    - name: TypeScript type check
      run: |
        cd frontend
        npx tsc --noEmit
      
    - name: Build React app
      run: |
        cd frontend
        npm run build
      
    - name: Run frontend tests
      run: |
        cd frontend
        npm test -- --watchAll=false --coverage --passWithNoTests

  # Линтинг и качество кода
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    needs: [backend-ci, frontend-ci]  # Запускаем после успешной сборки
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Backend linting
      run: |
        cd backend
        dotnet format --verify-no-changes --verbosity diagnostic
        
    - name: Frontend linting
      run: |
        cd frontend
        npx eslint src/ --ext .js,.jsx,.ts,.tsx